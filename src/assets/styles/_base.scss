/* --------- LAYOUT --------- */

$breakpoint-mobile__ex: 960px;
$breakpoint-mobile__in: $breakpoint-mobile__ex + 1px;
$breakpoint-desktop__in: 1080px;
$breakpoint-desktop__ex: $breakpoint-desktop__in - 1px;

$gap__v: 16px;
$gap__h: 20px;

$gap__v__xs: calc($gap__v / 2); // 8px
$gap__v__s:  $gap__v;           // 16px
$gap__v__m:  $gap__v * 1.25;    // 20px
$gap__v__l:  $gap__v * 2;       // 32px
$gap__v__xl: $gap__v * 3.125;   // 50px

$gap__h__xs: calc($gap__h / 2); // 10px
$gap__h__s:  $gap__h;           // 20px
$gap__h__m:  $gap__h * 1.25;    // 25px
$gap__h__l:  $gap__h * 2;       // 40px
$gap__h__xl: $gap__h * 3.25;    // 65px

@mixin wrapper($mode: boxed) {
    display: block;
    margin: 0 auto;

    @if $mode == full {
        width: 100%;
        padding: 0 4%;

    } @else {
        width: 92%;
        max-width: 1320px;
    }
}

@mixin gridder {
    display: flex;
    column-gap: $gap__h__s;
    flex-flow: column;

    @media (min-width: $breakpoint-desktop__in) {
        display: grid;
        grid-template-columns: repeat(12, 1fr);
    }
}

@mixin flexxer($direction: h) {
    $self: &;
    display: flex;
    flex-flow: row;
    
    @if $direction == v {
        flex-flow: column;
    } @else {
        flex-flow: row;
    }
}

@mixin gridder-span($cols) {
    grid-column: auto / span $cols ;
}

@mixin gridder-start($col) {
    grid-column-start: $col;
}

/* --------- TYPOGRAPHY --------- */

@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@500;700&family=Roboto:wght@400;700&display=swap");

$f-family__sans: "Roboto", sans-serif;
$f-family__mono: "Roboto Mono", monospace;

$f-weight__regular: 400;
$f-weight__medium: 500;
$f-weight__bold: 700;

$f-size__base: 1rem; // 16px

$f-size__xs:  $f-size__base * 0.875; // 14px 
$f-size__s:   $f-size__base; 
$f-size__m:   $f-size__base * 1.25; // 20px
$f-size__l:   $f-size__base * 1.5; // 24px
$f-size__xl:  $f-size__base * 2.125; // 34px
$f-size__xxl: $f-size__base * 3.75; // 60px

// Typography reference: 
// body: $f-family__sans $f-weight__regular $f-size__s
// headline: $f-family__mono $f-weight__bold $f-size__l
// display: $f-family__mono $f-weight__bold $f-size__xxl
// cta: $f-family__sans $f-weight__bold $f-size__m

@mixin font-body() {
    font-family: $f-family__sans;
    font-weight: $f-weight__regular;
    font-size: $f-size__s;
    line-height: 1.5;
}

@mixin font-headline() {
    @include font-body();
    font-family: $f-family__mono;
    font-weight: $f-weight__bold;
    font-size: $f-size__l;
    line-height: 1.25;
}

@mixin font-display() {
    @include font-headline();
    font-size: $f-size__xxl;
    line-height: 1.33;
}

@mixin font-cta() {
    @include font-body();
    font-weight: $f-weight__bold;
    font-size: $f-size__m;
}


/* ----------- COLORS ----------- */

$white: #ffffff;
$black: #000000;
$light: #ffffff;
$dark: #272727;
$blushred: #f07c79;
$ochreyellow: #ffed65;
$tealblue: #44e0dc;

$primary: $blushred;
$secondary: $ochreyellow;
$tertiary: $tealblue;

$colors: (
    "white": $white,
    "black": $black,
    "light": $light,
    "dark": $dark,
    "primary": $primary,
    "secondary": $secondary,
    "tertiary": $tertiary,
);

$tones: (
    // "lightest": rgba(255, 255, 255, 100%),
    // "lighter": rgba(255, 255, 255, 78%),
    // // "base": rgba(255, 255, 255, 0%),
    // "darker": rgba(0, 0, 0, 78%),
    // "darkest": rgba(0, 0, 0, 100%),
    
    "lightest": rgb(255, 255, 255),
    "lighter": rgb(100, 100, 100),
    // "base": rgba(255, 255, 255, 0%),
    "darker": rgb(78, 78, 78),
    "darkest": rgb(0, 0, 0)
);

@function tone($color,$tone){
    @if map-has-key($colors, $color){
        $color: map-get($colors, $color);

        @if map-has-key($tones, $tone){
            $tone: map-get($tones, $tone);
            @return mix($color, $tone);
        }
        @return $color;
    }
    
    @if map-has-key($tones, $tone){
        $tone: map-get($tones, $tone);
        @return mix(inherit, $tone);
    }
    @return null;
}

// :root {
//     @each $color, $hex in $colors {
//         @each $lightness, $tone, $percentage in $tones {
//             --#{$color}-#{$lightness}: #{mix( $hex, $tone, $percentage)};
//         }
//     }
// }



/* --------- TRANSITION --------- */

// TIME 
$t__base: 300ms;

$t__faster: calc($t__base / 3.33);
$t__fast:   calc($t__base / 2.5);
$t__base:   $t__base;
$t__slow:   $t__base * 1.75;
$t__slower: $t__base * 3;

// SPACE 
$wave__light-dark:    url('@assets/graphics/wave__light-dark.svg');
$wave__dark-light:    url('@assets/graphics/wave__dark-light.svg');
$wave__light-primary: url('@assets/graphics/wave__light-primary.svg');